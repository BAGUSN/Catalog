<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       default-init-method="init" default-destroy-method="destroy"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">


    <import resource="applicationContext-download-jobs.xml"/>
    <import resource="applicationContext-dataimport-jobs.xml"/>


    <bean id="quartzTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- spring uses a LinkedBlockingQueue, due to this corePoolSize and Max is just the same-->
        <property name="corePoolSize" value="16"/>
        <property name="maxPoolSize" value="16"/>
        <property name="allowCoreThreadTimeOut" value="true"/>
        <property name="keepAliveSeconds" value="10"/>
        <property name="queueCapacity" value="100"/>
    </bean>


    <!-- if u initialize a custom Context please set the context.setEnvironment("full")  -->
    <!-- <beans profile="full"> removed per Greg on 2012.08.13 -->
        <!-- Scheduler for dataimport jobs -->
        <bean id="dataImportSchedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
            <property name="triggers">
                <list>
                    <ref bean="uploadDataFilesJobTrigger"/>
                    <ref bean="dataImportJobTrigger"/>
                    <ref bean="imageProcessJobTrigger"/>
                    <ref bean="defaultCouponNotificationJobTrigger"/>
                    <ref bean="dataExportJobTrigger"/>
                    <ref bean="dataImportCleanUpJobTrigger"/>
                    <ref bean="srcImageDownloadJobTrigger"/>
                    <ref bean="ProductWeightComputationJobTrigger"/>
                    <ref bean="searchItemHashJobTrigger"/>
                </list>
            </property>
            <property name="taskExecutor" ref="quartzTaskExecutor"/>
        </bean>

        <!-- Scheduler for downloading feeds -->
        <bean id="feedDownloadSchedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
            <property name="triggers">
                <list>
                    <ref bean="downloadFicstarDataFilesJobTrigger"/>
                    <ref bean="downloadCJDataFilesJobTrigger"/>
                    <ref bean="downloadGoogleDataFilesJobTrigger"/>
                    <ref bean="downloadMerchantDataFilesJobTrigger"/>
                    <ref bean="curationSourceCacheImportJobTrigger"/>
                </list>
            </property>
            <property name="taskExecutor" ref="quartzTaskExecutor"/>
        </bean>
    <!-- process to generate hash for columns used in search -->
            <bean id="searchItemHashJobTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
                <property name="jobDetail" ref="searchItemHashJobDetail"/>
                <property name="startDelay" value="23000"/>
                <property name="repeatInterval" value="60000"/>
            </bean>
            <bean name="searchItemHashJobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">
                <property name="jobClass" value="com.dell.acs.jobs.SearchItemHashJob"/>
                <property name="jobDataAsMap">
                    <map>
                        <entry key="productManager" value-ref="productManagerImpl"/>
                        <entry key="retailerManager" value-ref="retailerManagerImpl"/>
                        <entry key="configurationService" value-ref="configurationService"/>
                    </map>
                </property>
            </bean>
    <!-- </beans> -->

    <beans profile="test">
        <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
            <property name="taskExecutor" ref="quartzTaskExecutor"/>
        </bean>
    </beans>


</beans>